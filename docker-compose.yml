version: '3.8'

services:
  db:
    image: postgres:14-alpine
    container_name: baassist-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-baassist}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  parser:
    build:
      context: ./parser
    container_name: baassist-parser
    restart: always
    environment:
      PORT: 4000
    ports:
      - "4000:4000"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
    container_name: baassist-app
    restart: always
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-baassist}?schema=public
      PARSER_URL: http://parser:4000/extract-text
      JWT_SECRET: ${JWT_SECRET}
      GCS_PROJECT_ID: ${GCS_PROJECT_ID}
      GCS_BUCKET: ${GCS_BUCKET}
      GCS_KEY_FILE: ${GCS_KEY_FILE}
      DB_HOST: db
      DB_PORT: 5432
      SEED_DATABASE: "true"
      INIT_BUSINESS_PROCESSES: "true"
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      parser:
        condition: service_healthy
    volumes:
      - ./keys:/app/keys # Для сервисных аккаунтов GCS

  nginx:
    image: nginx:alpine
    container_name: baassist-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    restart: always

volumes:
  postgres_data: